[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Dustin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Dustin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.9 (Oracle Corporation Java 11.0.10)
[debug]       Load.loadUnit: plugins took 60.777ms
[debug]       Load.loadUnit: defsScala took 0.2202ms
[debug] [Loading] Scanning directory C:\Users\Dustin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dustin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.0416 ms
[debug]           Load.resolveProject(global-plugins) took 34.8954ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Dustin\.sbt\1.0\plugins, plugins: List(<none>))) took 71.1456ms
[debug] [Loading] Done in C:\Users\Dustin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 85.5963ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1715ms
[debug]     Load.loadUnit(file:/C:/Users/Dustin/.sbt/1.0/plugins/, ...) took 152.6443ms
[debug]   Load.apply: load took 259.7498ms
[debug]   Load.apply: resolveProjects took 4.1167ms
[debug]   Load.apply: finalTransforms took 34.0678ms
[debug]   Load.apply: config.delegates took 4.5568ms
[debug]   Load.apply: Def.make(settings)... took 1268.2063ms
[debug]   Load.apply: structureIndex took 59.0598ms
[debug]   Load.apply: mkStreams took 1.0784ms
[info] loading global plugins from C:\Users\Dustin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7618.0466ms
[debug]           Load.loadUnit: plugins took 15.4332ms
[debug]           Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory E:\Workspace\project-workspace\ExerciseListsAufgabe\project
[debug]             Load.loadUnit: mkEval took 5.091ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Workspace\project-workspace\ExerciseListsAufgabe\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.441 ms
[info] loading settings for project exerciselistsaufgabe-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(exerciselistsaufgabe-build) took 2.6936ms
[debug]             Load.loadTransitive: finalizeProject(Project(id exerciselistsaufgabe-build, base: E:\Workspace\project-workspace\ExerciseListsAufgabe\project, plugins: List(<none>))) took 4.584ms
[debug] [Loading] Done in E:\Workspace\project-workspace\ExerciseListsAufgabe\project, returning: (exerciselistsaufgabe-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1317.1869ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.8371ms
[debug]         Load.loadUnit(file:/E:/Workspace/project-workspace/ExerciseListsAufgabe/project/, ...) took 1338.1582ms
[debug]       Load.apply: load took 1338.9872ms
[debug]       Load.apply: resolveProjects took 0.0626ms
[debug]       Load.apply: finalTransforms took 5.3358ms
[debug]       Load.apply: config.delegates took 0.2332ms
[debug]       Load.apply: Def.make(settings)... took 38.8073ms
[debug]       Load.apply: structureIndex took 19.3376ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from E:\Workspace\project-workspace\ExerciseListsAufgabe\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5452.6173ms
[debug]     Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory E:\Workspace\project-workspace\ExerciseListsAufgabe
[debug]       Load.loadUnit: mkEval took 0.1869ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Workspace\project-workspace\ExerciseListsAufgabe, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbteclipse.plugin.EclipsePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbteclipse.plugin.EclipsePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbteclipse.plugin.EclipsePlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.1887 ms
[info] loading settings for project exerciselistsaufgabe from build.sbt ...
[debug]         Load.resolveProject(exerciselistsaufgabe) took 22.0577ms
[debug]       Load.loadTransitive: finalizeProject(Project(id exerciselistsaufgabe, base: E:\Workspace\project-workspace\ExerciseListsAufgabe, plugins: List(<none>))) took 24.0196ms
[debug] [Loading] Done in E:\Workspace\project-workspace\ExerciseListsAufgabe, returning: (exerciselistsaufgabe)
[debug]     Load.loadUnit: loadedProjectsRaw took 594.6828ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.9394ms
[debug]   Load.loadUnit(file:/E:/Workspace/project-workspace/ExerciseListsAufgabe/, ...) took 6049.7126ms
[debug] Load.apply: load took 6050.4636ms
[debug] Load.apply: resolveProjects took 0.0587ms
[debug] Load.apply: finalTransforms took 14.7422ms
[debug] Load.apply: config.delegates took 0.1926ms
[debug] Load.apply: Def.make(settings)... took 41.0473ms
[debug] Load.apply: structureIndex took 12.144ms
[debug] Load.apply: mkStreams took 0.0017ms
[info] set current project to ListsAufgabe (in build file:/E:/Workspace/project-workspace/ExerciseListsAufgabe/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 2983 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 2983, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ListsAufgabe (in build file:/E:/Workspace/project-workspace/ExerciseListsAufgabe/)
[debug] > Exec(idea-shell, None, None)
